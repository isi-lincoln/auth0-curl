#! /bin/bash

# Copyright 2014 Gleetr SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


CURL_ARGS=$@
CONFILE=${CONFILE:-.passwd}

while getopts c:hH opt; do
    case $opt in
        c) CONFILE=$OPTARG
            ;;
        h|H)
            echo $(basename $0) \[-c path/to/.passwd\]
            exit 1
            ;;
    esac
done

shift $((OPTIND-1))

if [ ! -f "$CONFILE" ]; then
    echo "Missing configuration file: $CONFILE !";
    exit 1;
fi

AUTH0_DOMAIN=$(sed -n '1p' $CONFILE)
AUTH0_CLIENTID=$(sed -n '2p' $CONFILE)
AUTH0_USERNAME=$(sed -n '3p' $CONFILE)
AUTH0_PASSWORD=$(sed -n '4p' $CONFILE)
AUTH0_AUDIENCE=$(sed -n '5p' $CONFILE)
AUTH0_REALM="Username-Password-Authentication"
AUTH0_GRANT="password"
AUTH0_SCOPE="profile openid email"

TOKEN_URL=https://${AUTH0_DOMAIN}/oauth/token
TOKEN_PAYLOAD="{
  \"client_id\":   \"${AUTH0_CLIENTID}\",
  \"username\":    \"${AUTH0_USERNAME}\",
  \"password\":    \"${AUTH0_PASSWORD}\",
  \"audience\":    \"${AUTH0_AUDIENCE}\",
  \"realm\":       \"${AUTH0_REALM}\",
  \"grant_type\":  \"${AUTH0_GRANT}\",
  \"scope\":       \"${AUTH0_SCOPE}\",
  \"device\":      \"\"
}"

# call Auth0 to retrieve the JWT
JWT=$(echo ${TOKEN_PAYLOAD} | curl -s ${CURL_VERBOSE} -X POST -H 'Content-Type: application/json' --data-binary @- ${TOKEN_URL})

# extract the id_token in the JWT
# check os version because osx requires egrep
if [[ "$OSTYPE" == "linux"* ]]; then
  ACCESS_TOKEN=$(echo ${JWT} | grep -Po '"access_token":.*?[^\\]"' | cut -d ':' -f 2 | tr -d '"')
elif [[ "$OSTYPE" == "darwin"* ]]; then
  ACCESS_TOKEN=$(echo ${JWT} | egrep -o '"access_token":.*?[^\\]"' | cut -d ':' -f 2 | tr -d '"')
else
  ACCESS_TOKEN=$(echo ${JWT} | grep -Po '"access_token":.*?[^\\]"' | cut -d ':' -f 2 | tr -d '"')
fi

# execute the asked cURL with the correct Authorization header
echo $ACCESS_TOKEN
